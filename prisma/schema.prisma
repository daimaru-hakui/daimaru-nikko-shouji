// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id    String @id @unique
  email String @unique
  username String?
  role Role? @default(USER)
  created_at  DateTime  @default(now()) @db.Timestamptz(6)
  @@map("users")
}

enum Role {
  USER
  ADMIN
  MEMBER
}

model orders {
  id                  Int                @id @default(autoincrement())
  created_at          DateTime           @default(now()) @db.Timestamptz(6)
  order_number        String             @default("")
  topic_name          String             @default("")
  order_status        String             @default("UNREAD")
  deleted_at          DateTime?          @db.Timestamp(6)
  order_details       order_details[]
  shipping_address_id Int
  shipping_addresses  shipping_addresses @relation(fields: [shipping_address_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  shipping_histories  shipping_histories[]

}

model order_details {
  id               Int                @id @default(autoincrement())
  created_at       DateTime           @default(now()) @db.Timestamptz(6)
  product_number   String             @default("")
  product_name     String             @default("")
  color            String             @default("")
  size             String             @default("")
  quantity         Int                @default(0)
  comment          String             @default("")
  order_quantity   Int                @default(0)
  processing       Boolean            @default(false)
  order_id         Int
  orders  orders    @relation(fields: [order_id], references: [id], onDelete: Cascade)
  supplier_id      Int
  suppliers        suppliers          @relation(fields: [supplier_id], references: [id], onDelete: NoAction)
  shipping_details shipping_details[]
}

model shipping_addresses { 
  id                 Int                  @id @default(autoincrement())
  created_at         DateTime             @default(now()) @db.Timestamptz(6)
  updated_at         DateTime?            @default(now()) @db.Timestamptz(6)
  name               String               @default("")
  tel                String               @default("")
  address            String               @default("")
  post_code          String               @default("")
  orders             orders[]
  shipping_histories shipping_histories[]
}

model shipping_details {
  id                  Int                @id @default(autoincrement())
  created_at          DateTime           @default(now()) @db.Timestamptz(6)
  quantity            Int                @default(0)
  updated_at          DateTime           @default(now()) @db.Timestamptz(6)
  order_detail_id     Int?
  order_details       order_details?     @relation(fields: [order_detail_id], references: [id], onDelete: Cascade)
  shipping_history_id Int
  shipping_histories  shipping_histories @relation(fields: [shipping_history_id], references: [id], onDelete: Cascade)
}

model shipping_histories {
  id                  Int                 @id @default(autoincrement())
  created_at          DateTime            @default(now()) @db.Timestamptz(6)
  updated_at          DateTime            @default(now()) @db.Timestamptz(6)
  shipping_date       DateTime            @db.Date
  shipping_address_id Int?
  shipping_addresses  shipping_addresses? @relation(fields: [shipping_address_id], references: [id], onDelete: Cascade)
  shipping_details    shipping_details[]
  order_id            Int
  orders              orders              @relation(fields: [order_id], references: [id], onDelete: Cascade)
  }


model suppliers {
  id            Int          @id @default(autoincrement())
  created_at    DateTime        @default(now()) @db.Timestamptz(6)
  name          String          @default("")
  code          String          @default("-")
  turn          Int             @default(99) @db.SmallInt
  order_details order_details[]
}