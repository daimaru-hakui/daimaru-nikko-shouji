generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id        String   @id @unique
  email     String   @unique
  username  String?
  role      Role?    @default(USER)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)

  @@map("users")
}

model orders {
  id                Int                 @id @default(autoincrement())
  createdAt         DateTime            @default(now()) @map("created_at") @db.Timestamptz(6)
  orderNumber       String              @default("") @map("order_number")
  topicName         String              @default("") @map("topic_name")
  deletedAt         DateTime?           @map("deleted_at") @db.Timestamp(6)
  orderStatus       OrderRole           @default(UNREAD) @map("order_status")
  shippingAddressId Int
  orderDetails      orderDetails[]
  shippingAddresses shippingAddresses   @relation(fields: [shippingAddressId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  shippingHistories shippingHistories[]

  @@map("orders")
}

model orderDetails {
  id              Int               @id @default(autoincrement())
  createdAt       DateTime          @default(now()) @map("created_at") @db.Timestamptz(6)
  productNumber   String            @default("") @map("product_number")
  productName     String            @default("") @map("product_name")
  color           String            @default("")
  size            String            @default("")
  quantity        Int               @default(0)
  comment         String            @default("")
  orderQuantity   Int               @default(0) @map("order_quantity")
  supplierId      Int               @map("supplier_id")
  processing      Boolean           @default(false)
  orderId         Int               @map("order_id")
  price           Int               @default(0)
  orders          orders            @relation(fields: [orderId], references: [id], onDelete: Cascade)
  suppliers       suppliers         @relation(fields: [supplierId], references: [id], onDelete: NoAction)
  shippingDetails shippingDetails[]

  @@map("order_details")
}

model shippingAddresses {
  id                Int                 @id @default(autoincrement())
  createdAt         DateTime            @default(now()) @map("created_at") @db.Timestamptz(6)
  name              String              @default("")
  tel               String              @default("")
  address           String              @default("")
  postCode          String              @default("") @map("post_code")
  updatedAt         DateTime?           @default(now()) @map("update_at") @db.Timestamptz(6)
  orders            orders[]
  shippingHistories shippingHistories[]

  @@map("shipping_addresses")
}

model shippingDetails {
  id                Int               @id @default(autoincrement())
  createdAt         DateTime          @default(now()) @map("created_at") @db.Timestamptz(6)
  quantity          Int               @default(0)
  orderDetailId     Int?              @map("order_detail_id")
  shippingHistoryId Int               @map("shipping_history_id")
  updatedAt         DateTime          @default(now()) @map("update_at") @db.Timestamptz(6)
  orderDetails      orderDetails?     @relation(fields: [orderDetailId], references: [id], onDelete: Cascade)
  shippingHistories shippingHistories @relation(fields: [shippingHistoryId], references: [id], onDelete: Cascade)

  @@map("shipping_details")
}

model shippingHistories {
  id                Int                @id @default(autoincrement())
  createdAt         DateTime           @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt         DateTime           @default(now()) @map("updated_at") @db.Timestamptz(6)
  shippingDate      DateTime           @map("shipping_date") @db.Date
  shippingAddressId Int?               @map("shipping_address_id")
  orderId           Int                @map("order_id")
  shippingLabel     Int?               @map("shipping_label")
  shippingDetails   shippingDetails[]
  orders            orders             @relation(fields: [orderId], references: [id], onDelete: Cascade)
  shippingAddresses shippingAddresses? @relation(fields: [shippingAddressId], references: [id], onDelete: Cascade)

  @@map("shipping_histories")
}

model suppliers {
  id           Int            @id @default(autoincrement())
  createdAt    DateTime       @default(now()) @map("created_at") @db.Timestamptz(6)
  name         String         @default("")
  code         String         @default("-")
  turn         Int            @default(99) @db.SmallInt
  orderDetails orderDetails[]

  @@map("suppliers")
}

enum Role {
  USER
  ADMIN
  MEMBER
}

enum OrderRole {
  UNREAD
  READ
  ARRANGE
  CANCEL
  SHIPPING
}
